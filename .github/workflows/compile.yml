name: test & release
on:
  push:
    branches: main
    tags:
      - v*
      - p*

jobs:
  build:
    name: ${{ matrix.const.as_release && ( matrix.const.is_release && 'release' || 'prerelease') || 'test' }} build on ${{matrix.target.name}}
    runs-on: ${{ matrix.target.host }}
    strategy:
      matrix:
        const:
          - mode: ${{ (startsWith(github.ref,'refs/tags/v')||startsWith(github.ref,'refs/tags/p')) && 'release' || 'test' }}
            as_release: ${{ startsWith(github.ref,'refs/tags/v')||startsWith(github.ref,'refs/tags/p') }}
            is_release: ${{ startsWith(github.ref,'refs/tags/v') }}
        target:
          - name: osx_arm64
            host: macos-latest
        #   - name: osx_amd64
        #     host: macos-13
    steps:
      - name: install deps
        run: |
          brew upgrade
          brew install gcc cmake ninja open-mpi fftw scalapack
      - name: check state
        run: |
          echo $PATH
          which mpif90
          which mpicc
      - name: checkout quantum espresso
        uses: actions/checkout@v4
        with:
          repository: QEF/q-e
          ref: master
          path: q-e
    #   - name: set build cache
    #     uses: actions/cache@v4
    #     with:
    #       path: |
    #         ${{ github.workspace }}/.cache/src
    #         ${{ github.workspace }}/.nginx
    #         ${{ github.workspace }}/target
    #       key: src+${{matrix.target.name}}+${{matrix.target.ngx}}+${{github.run_id}}
    #       restore-keys: src+${{matrix.target.name}}+${{matrix.target.ngx}}+
      - name: build
        run: |
          cd q-e
          cmake -S . -B build --install-prefix "${{ github.workspace }}/package" \
          -DCMAKE_Fortran_COMPILER=mpif90 \
          -DCMAKE_C_COMPILER=mpicc \
          -DQE_ENABLE_OPENMP=ON \
          -DQE_ENABLE_MPI=ON \
          -DQE_ENABLE_SCALAPACK=ON \

          cmake --build build
          cmake --install build
    #   - name: upload raw
    #     uses: actions/upload-artifact@v4
    #     with:
    #       name: raw+${{ matrix.target.name }}
    #       path: |
    #         q-e/install_dir/${{matrix.target.triple}}/release/*.so
    #         target/${{matrix.target.triple}}/release/*.dylib
#   publish:
#     name: publish github repository
#     needs: build
#     runs-on: ubuntu-latest
#     environment:
#       name: publish
#     permissions:
#       contents: write
#       actions: write
#     if: startsWith(github.ref,'refs/tags/v')||startsWith(github.ref,'refs/tags/p')
#     steps:
#       - name: checkout
#         uses: actions/checkout@v4
#         with:
#           ref: publish
#           fetch-depth: 0
#       - name: set gitconfig
#         run: |
#           git config user.name github-actions[bot]
#           git config user.email 41898282+github-actions[bot]@users.noreply.github.com
#       - name: merge the commit to `publish`
#         run: |
#           # git branch main ${{github.ref_name}}
#           git merge ${{github.ref_name}} -m "ci: catch up to ${{github.ref_name}}"
#           # git reset --hard ${{github.ref_name}}
#       - name: (deb) install reprepro and dpkg-sig
#         run: |
#           sudo apt-get -y install reprepro dpkg-sig
#       - name: (deb) import gpg key
#         uses: crazy-max/ghaction-import-gpg@v6
#         with:
#           gpg_private_key: ${{ secrets.DEB_GPG_SECRET_KEY }}
#       - name: (deb) download deb
#         uses: actions/download-artifact@v4
#         with:
#           pattern: deb+*
#           merge-multiple: true
#           path: ./
#       - name: (deb) build repository
#         run: |
#           cd publish/${{ startsWith(github.ref,'refs/tags/v') && 'deb' || 'deb-unstable' }}
#           rm -rf pool
#           rm -rf dists
#           for deb in $(ls ../../ |grep -E '\.deb$');do
#             dpkg-sig -k 3C288CF6F3917DC32ED8605655C5F6BAACEEA951 --sign builder "../../$deb"
#             reprepro includedeb "$(cat ../../$deb.codename)" "../../$deb"
#           done
#           reprepro export
#           rm -rf db
#           cd -
#       - name: (deb) commit
#         run: |
#           git add ./publish/${{ startsWith(github.ref,'refs/tags/v') && 'deb' || 'deb-unstable' }}/
#           git commit -m "ci: generate debian ${{ startsWith(github.ref,'refs/tags/v') && 'stable' || 'unstable' }} repository"
#       - name: push
#         run: git push
